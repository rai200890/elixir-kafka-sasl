services:
  pix-dispatcher:
    build:
      context: .
      dockerfile: kafka-ssl-dockerfile
    ports:
      - 3031:4000
    restart: "on-failure"
    environment:
      CONFLUENT_KAFKA_BOOTSTRAP_SERVERS: "kafka:9095"
      CONFLUENT_KAFKA_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username="test" password="testtest";
      CONFLUENT_KAFKA_SASL_MECHANISMS: PLAIN
      CONFLUENT_KAFKA_SASL_PASSWORD: testtest
      CONFLUENT_KAFKA_SASL_USERNAME: test
      CONFLUENT_KAFKA_SECURITY_PROTOCOL: SASL_SSL
    depends_on:
      kafka: 
        condition: service_started

  zookeeper:
    image: confluentinc/cp-zookeeper:5.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/server-jaas.conf -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider"
    volumes:
      - ./kafka/server-jaas.conf:/etc/kafka/server-jaas.conf
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
  
  kafka:
    image: confluentinc/cp-kafka:5.0.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9095:9095"
    restart: on-failure
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SSL:SSL,SSL_HOST:SSL,SASL_SSL:SASL_SSL,SASL_SSL_HOST:SASL_SSL
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093,SSL://kafka:9094,SSL_HOST://localhost:29094,SASL_SSL://kafka:9095,SASL_SSL_HOST://localhost:29095
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_SSL_KEYSTORE_FILENAME: "kafka.server.keystore.jks"
      KAFKA_SSL_KEYSTORE_CREDENTIALS: "keystore_creds"
      KAFKA_SSL_KEY_CREDENTIALS: "sslkey_creds"
      KAFKA_SSL_TRUSTSTORE_FILENAME: "kafka.server.truststore.jks"
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: "truststore_creds"
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: "PLAIN"
      KAFKA_SASL_ENABLED_MECHANISMS: "PLAIN,SCRAM-SHA-256,SCRAM-SHA-512"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/opt/kafka/config/server-jaas.conf"
      # suppress verbosity
      #   # https://github.com/confluentinc/cp-docker-images/blob/master/debian/kafka/include/etc/confluent/docker/log4j.properties.template
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka/certs/kafka.server.keystore.jks:/etc/kafka/secrets/kafka.server.keystore.jks
      - ./kafka/certs/kafka.server.truststore.jks:/etc/kafka/secrets/kafka.server.truststore.jks
      - ./kafka/certs/keystore_creds:/etc/kafka/secrets/keystore_creds
      - ./kafka/certs/sslkey_creds:/etc/kafka/secrets/sslkey_creds
      - ./kafka/certs/truststore_creds:/etc/kafka/secrets/truststore_creds
      - ./kafka/server-jaas.conf:/opt/kafka/config/server-jaas.conf
      - kafka-data:/var/lib/kafka/data
